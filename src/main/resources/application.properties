spring.application.name=blue
logging.level.org.springframework.core.env=DEBUG

# Server Configuration
server.port=${PORT:8080}
server.servlet.session.cookie.secure=${COOKIE_SECURE:false}
server.servlet.session.cookie.http-only=true

# Database Configuration - PostgreSQL (uncomment for PostgreSQL)
#spring.datasource.url=jdbc:postgresql://localhost:5432/blue_dev
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.hibernate.ddl-auto=update

# H2 Database Configuration (for local development/testing)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# JPA Configuration for H2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# For production deployment, use the environment variables: 
#spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://dpg-d33oa33e5dus73ed65jg-a.oregon-postgres.render.com:5432/blue_ekij}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME:blue}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:CCGjDHDHXJ2l0B5lBYRwS0j5Y0xHiA4c}
#spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}

# H2 Console (for development)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Disable Flyway for H2
spring.flyway.enabled=false

# Database Connection Pool (HikariCP) - Environment-based configuration
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX:10}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN:2}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT:300000}
spring.datasource.hikari.connection-timeout=${DB_POOL_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.max-lifetime=${DB_POOL_MAX_LIFETIME:1800000}
spring.datasource.hikari.validation-timeout=${DB_POOL_VALIDATION_TIMEOUT:5000}
spring.datasource.hikari.leak-detection-threshold=${DB_POOL_LEAK_DETECTION:60000}
spring.datasource.hikari.connection-test-query=SELECT 1

# Actuator & Monitoring Configuration - Environment-based
management.endpoints.web.exposure.include=${ACTUATOR_ENDPOINTS:health,info,metrics}
management.endpoint.health.show-details=${HEALTH_SHOW_DETAILS:when-authorized}
management.health.defaults.enabled=true
management.health.diskspace.enabled=true
management.health.db.enabled=true
management.health.mail.enabled=false
management.health.rabbit.enabled=false

# Logging Configuration - Environment-based
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.org.springframework.web=${LOG_LEVEL_WEB:WARN}
logging.level.org.hibernate=${LOG_LEVEL_HIBERNATE:WARN}
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=${LOG_LEVEL_REQUEST:INFO}
logging.level.org.springframework.jdbc.core.JdbcTemplate=${LOG_LEVEL_JDBC:INFO}
logging.level.org.hibernate.SQL=${LOG_LEVEL_SQL:WARN}
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Stock API Configuration
stock.api.key=${STOCK_API_KEY:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTEyMiwiZW1haWwiOiJ0dWFuYW5oLm5nb0BlbnNvZ28udm4iLCJpYXQiOjE3NTU0NDE2NDB9.Xw5Z0fabfkqOSRbdDNUnHTdI0C69JRb0SwI1zjS3ko0}
stock.api.base=${STOCK_API_URL:https://wifeed.vn/api}

# Mail Configuration - Enabled for development
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:minhquangvuxd@gmail.com}
spring.mail.password=${MAIL_PASSWORD:ogkbuhxvlzbsmikn}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Application Configuration
application.base.url=${APPLICATION_BASE_URL:http://localhost:8080}
mail.from.email=${MAIL_FROM_EMAIL:minhquangvuxd@gmail.com}
mail.from.name=${MAIL_FROM_NAME:Blue Trading Platform}

# RabbitMQ (Commented out - RabbitMQ functionality disabled)
# spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
# spring.rabbitmq.port=${RABBITMQ_PORT:5672}
# spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
# spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}

# H2 Database (commented out - for local development)
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console
# spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:mem:test}
# spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sa}
# spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
# spring.datasource.driver-class-name=org.h2.Driver
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=create-drop

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:redis-13723.c10.us-east-1-3.ec2.redns.redis-cloud.com}
spring.data.redis.port=${REDIS_PORT:13723}
spring.data.redis.password=${REDIS_PASSWORD:dm2vx5ZUdB52PptFFlKOu9vMzQp9KfDQ}
spring.data.redis.ssl.enabled=${REDIS_SSL:true}
spring.data.redis.database=${REDIS_DATABASE:0}

# JWT Configuration
jwt.secretKey=${JWT_SECRET_KEY:your_super_secret_and_long_jwt_key_that_is_at_least_256_bits_long}
jwt.expiration=${JWT_EXPIRATION:86400000}

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001,https://blue-trading.vercel.app,https://blue-frontend-admin.vercel.app}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:Authorization,Content-Type,X-Requested-With,Accept,Origin}
cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}
cors.max-age=${CORS_MAX_AGE:3600}

# Firebase Configuration
firebase.service-account-key-path=${FIREBASE_SERVICE_ACCOUNT_KEY_PATH:classpath:serviceAccountKey.json}
firebase.project-id=${FIREBASE_PROJECT_ID:blue-88dfd}
firebase.storage.bucket-name=${FIRE_STORAGE_BUCKET_NAME:blue-88dfd.appspot.com}

# WebSocket Configuration
websocket.broker.host=${WEBSOCKET_BROKER_HOST:localhost}
websocket.broker.port=${WEBSOCKET_BROKER_PORT:61613}
websocket.broker.username=${WEBSOCKET_BROKER_USERNAME:guest}
websocket.broker.password=${WEBSOCKET_BROKER_PASSWORD:guest}
websocket.endpoint=${WEBSOCKET_ENDPOINT:/ws}
websocket.destination-prefix=${WEBSOCKET_DESTINATION_PREFIX:/topic}
websocket.allowed-origins=${WEBSOCKET_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001,https://blue-trading.vercel.app,https://blue-frontend-admin.vercel.app}
