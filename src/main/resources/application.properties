spring.application.name=blue
logging.level.org.springframework.core.env=DEBUG

# Server Configuration
server.port=${PORT:8080}
server.servlet.session.cookie.secure=${COOKIE_SECURE:false}
server.servlet.session.cookie.http-only=true

# Database Configuration - PostgreSQL
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://dpg-d2e4fsadbo4c73emk2cg-a.oregon-postgres.render.com:5432/blue_r0op}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:blue_r0op_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:qD6VX9gmwx7OMEqbIzfriJrY85dPuBvq}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:false}

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Database Connection Pool (HikariCP) - Environment-based configuration
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX:10}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN:2}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT:300000}
spring.datasource.hikari.connection-timeout=${DB_POOL_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.max-lifetime=${DB_POOL_MAX_LIFETIME:1800000}
spring.datasource.hikari.validation-timeout=${DB_POOL_VALIDATION_TIMEOUT:5000}
spring.datasource.hikari.leak-detection-threshold=${DB_POOL_LEAK_DETECTION:60000}
spring.datasource.hikari.connection-test-query=SELECT 1

# Actuator & Monitoring Configuration - Environment-based
management.endpoints.web.exposure.include=${ACTUATOR_ENDPOINTS:health,info,metrics}
management.endpoint.health.show-details=${HEALTH_SHOW_DETAILS:when-authorized}
management.health.defaults.enabled=true
management.health.diskspace.enabled=true
management.health.db.enabled=true
management.health.mail.enabled=false
management.health.rabbit.enabled=false

# Logging Configuration - Environment-based
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.org.springframework.web=${LOG_LEVEL_WEB:WARN}
logging.level.org.hibernate=${LOG_LEVEL_HIBERNATE:WARN}
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=${LOG_LEVEL_REQUEST:INFO}
logging.level.org.springframework.jdbc.core.JdbcTemplate=${LOG_LEVEL_JDBC:INFO}
logging.level.org.hibernate.SQL=${LOG_LEVEL_SQL:WARN}
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Stock API Configuration
alphavantage.api.key=${ALPHAVANTAGE_API_KEY:TW10G2S77NID2ZCA}
alphavantage.api.url=${ALPHAVANTAGE_API_URL:https://www.alphavantage.co/query}

# Mail Configuration - Disabled for production
# spring.mail.host=${MAIL_HOST:smtp.gmail.com}
# spring.mail.port=${MAIL_PORT:587}
# spring.mail.username=${MAIL_USERNAME:minhquangvuxd@gmail.com}
# spring.mail.password=${MAIL_PASSWORD:ogkbuhxvlzbsmikn}
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true

# RabbitMQ (Commented out - RabbitMQ functionality disabled)
# spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
# spring.rabbitmq.port=${RABBITMQ_PORT:5672}
# spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
# spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}

# H2 Database (commented out - for local development)
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console
# spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:mem:test}
# spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sa}
# spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
# spring.datasource.driver-class-name=org.h2.Driver
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=create-drop